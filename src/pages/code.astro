---
import { Image } from 'astro:assets';
import Layout from '../layouts/Layout.astro';
import { contentfulClient } from '../lib/contentful';
import { TypeCodeGallerySkeleton } from '../types/contentful';
import ModalTrigger from '../components/ModalTrigger';

const codeGalleries =
  await contentfulClient.withoutUnresolvableLinks.getEntries<TypeCodeGallerySkeleton>({
    content_type: 'codeGallery',
    order: ['fields.order'],
  });
---

<Layout>
  <div class="code-page">
    <div class="code-title">Code</div>
    <div class="cards-container">
      {
        codeGalleries.items.map((item, index) => {
          return (
            <ModalTrigger
              passedModalData={{ index: index, type: 'code', data: codeGalleries }}
              client:only="react"
            >
              <div class="card-title">{item.fields.title}</div>
              <div class="card-image">
                <Image
                  class="image"
                  src={`https://${item.fields.image?.fields.file?.url}`}
                  alt={item.fields.image?.fields.description || ''}
                  width={800}
                  inferSize
                />
              </div>
            </ModalTrigger>
          );
        })
      }
    </div>
  </div>
</Layout>

<style>
  .code-title {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    text-transform: uppercase;
    font-family: var(--font-title);
    font-weight: 600;
    font-style: normal;
    font-size: var(--gallery-title-font-size);
    margin-bottom: 10px;
    color: var(--color-primary);
  }

  .cards-container {
    display: flex;
    flex-flow: row wrap;
    gap: max(2vw, 20px);

    &:after {
      content: '';
      flex: 1 1 400px;
    }
  }

  .card-title {
    z-index: 5;
    position: absolute;
    top: 0;
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
    text-transform: uppercase;
    font-family: var(--font-title);
    font-weight: 400;
    font-size: var(--gallery-card-font-size);
    color: var(--gallery-card-color);
    background-color: var(--gallery-card-bg);
    opacity: 0;
    transition: opacity 0.2s ease-out;
  }

  .card-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  @media only screen and (max-width: 768px) {
    .card-title {
      opacity: 1;
      top: 80%;
      height: 20%;
    }
  }
</style>

<style is:global>
  .cards-container button {
    cursor: pointer;
    position: relative;
    flex: 1 1 400px;
    height: 300px;
    border: none;

    &:hover {
      .card-title {
        opacity: 1;
      }
    }
  }

  @media only screen and (max-width: 768px) {
    .cards-container button {
      margin-bottom: 20px;
    }
  }
</style>
