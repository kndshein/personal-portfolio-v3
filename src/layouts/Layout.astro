---
import '../styles/global.css';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import Modal from '../components/Modal';

// `Props` is taken by Astro
interface CustomProps {
  title?: string;
  disableHeadAndToe?: true;
}
const { title, disableHeadAndToe }: CustomProps = Astro.props.frontmatter || Astro.props;
---

<!doctype html>
<html lang="en" data-theme="light">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
    <script is:inline>
      // Immediately apply the saved theme
      const savedTheme = localStorage.getItem('theme') || 'light';
      document.documentElement.setAttribute('data-theme', savedTheme);
    </script>
  </head>
  <body>
    <Modal client:only="react" />
    {!disableHeadAndToe && <Navbar />}
    <main>
      <slot />
    </main>
    {!disableHeadAndToe && <Footer />}
  </body>
</html>

<script>
  import { modalData } from '../lib/modalStore';

  const main = document.querySelector('main');
  const nav = document.querySelector('nav');
  const footer = document.querySelector('footer');

  modalData.subscribe((data) => {
    if (data) {
      document.body.classList.add('modal-disable');
      if (main && nav && footer) {
        main.setAttribute('inert', '');
        nav.setAttribute('inert', '');
        footer.setAttribute('inert', '');
      }
    } else {
      document.body.classList.remove('modal-disable');
      if (main && nav && footer) {
        main.removeAttribute('inert');
        nav.removeAttribute('inert');
        footer.removeAttribute('inert');
      }
    }
  });
</script>
